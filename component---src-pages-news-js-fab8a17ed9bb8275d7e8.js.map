{"version":3,"sources":["webpack:///./src/pages/news.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/services/auth.js","webpack:///./src/components/nav/nav.js","webpack:///./src/components/footer/footer.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout_js__WEBPACK_IMPORTED_MODULE_1__","gatsby__WEBPACK_IMPORTED_MODULE_2__","MAX_LENGTH","History","_ref","data","a","createElement","className","allStrapiArticle","edges","map","_ref2","text","maxlength","node","key","id","to","title","Date","updatedAt","toDateString","content","length","substr","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","handleLogin","isLoggedIn","logout","getUser","window","sessionStorage","getItem","JSON","parse","setUser","user","setItem","stringify","password","username","callback","Nav","_this","_React$Component","call","this","toggleNav","setState","activeNav","state","_this2","react_default","role","aria-label","gatsby_browser_entry","data-target","aria-expanded","onClick","aria-hidden","event","preventDefault","navigate","Component","footer","Layout","Fragment","nav","_755544856","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-news-js-fab8a17ed9bb8275d7e8.js","sourcesContent":["import React from 'react';\r\nimport Layout from '../components/layout.js';\r\nimport { Link, graphql } from 'gatsby'\r\n\r\nconst MAX_LENGTH = 132;\r\n\r\nfunction limitTextLength(text, maxlength = MAX_LENGTH) {\r\n\r\n    if (text.length > maxlength) {\r\n        return text.substr(0, maxlength) + '...';\r\n    }\r\n\r\n    return text;\r\n}\r\n\r\nconst History = ({data}) => {\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"container\">\r\n                <div className=\"columns is-centered\"> \r\n                    <div className=\"column is-four-fifths \">\r\n                        <section className=\"content history-wrap\">\r\n                            <h3 className=\"title is-3\">Latest News</h3>\r\n                            <hr />\r\n                            <ul className=\"news-list\">\r\n                                {\r\n                                    data.allStrapiArticle.edges.map(({node}) => {\r\n                                        return (\r\n                                            <li key={node.id} className=\"news-item\">\r\n                                                <h2><Link to={`/${node.id}`}>{node.title}</Link></h2>\r\n                                                <h5 className=\"subtitle is-5\">{new Date(node.updatedAt).toDateString()}</h5>\r\n                                                <p>{limitTextLength(node.content)}</p>\r\n                                            </li>   \r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>    \r\n        </Layout>\r\n    )\r\n    \r\n}\r\n\r\nexport default History;\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allStrapiArticle {\r\n      edges {\r\n        node {\r\n          id\r\n          title\r\n          content\r\n          updatedAt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","export const isBrowser = () => typeof window !== \"undefined\"\r\n\r\nexport const getUser = () =>\r\n    isBrowser() && window.sessionStorage.getItem(\"gatsbyUser\")\r\n    ? JSON.parse(window.sessionStorage.getItem(\"gatsbyUser\"))\r\n    : {}\r\n\r\nconst setUser = user =>\r\n    window.sessionStorage.setItem(\"gatsbyUser\", JSON.stringify(user))\r\n\r\nexport const handleLogin = ({ password}) => {\r\n    if (password === `1970`) {\r\n        return setUser({\r\n            username: `member`\r\n        })\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const isLoggedIn = () => {\r\n    const user = getUser()\r\n\r\n    return !!user.username\r\n}\r\n\r\nexport const logout = callback => {\r\n    setUser({})\r\n    callback();\r\n}","import React from 'react';\r\nimport { Link, navigate } from \"gatsby\"\r\n\r\n\r\nimport { getUser, isLoggedIn, logout } from \"../../services/auth\";\r\n\r\nclass Nav extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeNav: ''\r\n        }\r\n    }\r\n\r\n    toggleNav = () => {\r\n        return this.setState({\r\n            activeNav: !this.state.activeNav\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <nav className=\"navbar has-background-white-ter\" role=\"navigation\" aria-label=\"main navigation\">\r\n                <div className=\"navbar-brand\">\r\n                    <Link className=\"navbar-item\" to=\"/\">\r\n                        <p className=\"title\">BH<span className=\"has-text-primary\">BC</span></p>\r\n                    </Link>\r\n\r\n                    <a role=\"button\" \r\n                        className={`navbar-burger ${this.state.activeNav ? 'is-active' : ''}`}\r\n                         data-target=\"navMenu\" \r\n                         aria-label=\"menu\" \r\n                         aria-expanded=\"false\"\r\n                         onClick={() => this.toggleNav()}\r\n                        >\r\n                        <span aria-hidden=\"true\"></span>\r\n                        <span aria-hidden=\"true\"></span>\r\n                        <span aria-hidden=\"true\"></span>\r\n                    </a>\r\n                </div>\r\n\r\n                <div className={`navbar-menu ${this.state.activeNav ? 'is-active' : ''}`}>\r\n                    <div className=\"navbar-end\">\r\n                        <Link className=\"navbar-item\" to=\"/\">\r\n                            Home\r\n                        </Link>\r\n                        <div className=\"navbar-item has-dropdown is-hoverable\">\r\n                            <Link className=\"navbar-item\" to=\"/history\">\r\n                                About\r\n                            </Link>\r\n                            <div className=\"navbar-dropdown\">\r\n                                <Link className=\"navbar-item\" to=\"/commitee\">\r\n                                    Committee\r\n                                </Link>\r\n                                {/* <Link className=\"navbar-item\" to=\"/members\">\r\n                                    Membership\r\n                                </Link> */}\r\n                                <Link className=\"navbar-item\" to=\"/history\">\r\n                                    History\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        <Link className=\"navbar-item\" to=\"/news\">\r\n                            News\r\n                        </Link>\r\n                        <Link className=\"navbar-item\" to=\"/events\">\r\n                            Events\r\n                        </Link>\r\n                        <Link className=\"navbar-item\" to=\"/rules\">\r\n                            Rules\r\n                        </Link>\r\n                        {/* <Link className=\"navbar-item\" to=\"/tournament\">\r\n                            Tournament\r\n                        </Link> */}\r\n                        {/* <Link className=\"navbar-item\" to=\"/contact\">\r\n                            Contact\r\n                        </Link> */}\r\n                        {isLoggedIn() &&  <Link className=\"navbar-item\" to=\"/app/minutes\">\r\n                            Minutes\r\n                        </Link>}\r\n                        {!isLoggedIn() &&  <Link className=\"navbar-item\" to=\"/app/login\">\r\n                            Login\r\n                        </Link>}\r\n                        {isLoggedIn() ? (\r\n                            <Link className=\"navbar-item\" \r\n                                to=\"/app/login\"\r\n                                onClick={event => {\r\n                                    event.preventDefault()\r\n                                    logout(() => navigate(`/`))\r\n                                }}\r\n                            >\r\n                                Logout\r\n                            </Link>\r\n                            ) : null}\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n   \r\n }\r\n\r\n export default Nav;","import React from 'react';\r\n\r\nexport default () => (\r\n    <footer className=\"footer\">\r\n        <div className=\"content has-text-centered\">\r\n            <p>\r\n                Burgess Hill Bowls Club - Created by HeyJPDesigns\r\n            </p> \r\n        </div>\r\n    </footer>\r\n)","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\n// import Header from \"./header\"\r\nimport Nav from './nav/nav.js'\r\nimport Footer from './footer/footer.js'\r\nimport \"./layout.scss\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\r\n        <Nav></Nav>\r\n          <div>\r\n            <main>{children}</main>\r\n            {/* <footer>\r\n              © {new Date().getFullYear()}, Built with\r\n              {` `}\r\n              <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n            </footer> */}\r\n          </div>\r\n        <Footer></Footer>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}