{"version":3,"sources":["webpack:///./src/components/events/events-table.js","webpack:///./src/components/events/events.menus.js","webpack:///./src/pages/events.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/services/auth.js","webpack:///./src/components/nav/nav.js","webpack:///./src/components/footer/footer.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["EventItem","_ref","event","react_default","a","createElement","className","events_table_DateBox","date","events_table_EventDescription","name","opponent","venue","match","match_type","format","Result","result","tableStyles","hBreak","DateBox","_ref2","newDate","Date","dateBoxWrap","getDay","toUpperCase","getDate","EventDescription","_ref3","description","descWrap","events_table","_ref4","events","year","month","console","log","style","width","maxWidth","map","_ref5","node","events_table_EventItem","key","id","length","months","years","MonthsList","props","onClick","setMonth","EventsMenu","menuStyles","menuWrapper","setYear","events_menus_MonthsList","EventsWrapper","_this","_React$Component","call","this","menuToggle","setState","toggleMenu","state","filter","bind","assertThisInitialized_default","componentDidMount","Moment","render","_this2","data","allStrapiFixture","edges","layout","events_menus","React","Component","eventsQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","handleLogin","isLoggedIn","logout","getUser","window","sessionStorage","getItem","JSON","parse","setUser","user","setItem","stringify","password","username","callback","Nav","toggleNav","activeNav","role","aria-label","gatsby_browser_entry","to","data-target","aria-expanded","aria-hidden","preventDefault","navigate","footer","Layout","Fragment","nav","_755544856","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-events-js-db017b5371042e702f56.js","sourcesContent":["import React from 'react';\r\nimport tableStyles from './events-table.module.scss'\r\n\r\nconst EventItem = ({event}) => (\r\n        <div className=\"box\">\r\n            <div className=\"level is-marginless\">\r\n                <div className=\"level-left\">\r\n                    <div className=\"level-item\">\r\n                        <DateBox date={event.date} />\r\n                    </div>\r\n                    <div className=\"level-item\">\r\n                        <EventDescription \r\n                            name={event.opponent} \r\n                         />\r\n                    </div>\r\n                </div>\r\n                <div className=\"level-right\">\r\n                    <div className=\"level-item has-text-centered\">\r\n                        <div>\r\n                            <p className=\"heading has-text-weight-bold\">Location</p>    \r\n                            <p className=\"heading\">{event.venue}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"level-item has-text-centered\">\r\n                        <div>\r\n                            <p className=\"heading\">{event.match}</p>\r\n                            <p className=\"heading\">{event.match_type}</p>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"level-item\">\r\n                        <div>\r\n                            <p className=\"heading\">{event.format || 'Mixed'}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"level-item\">\r\n                        <div>\r\n                            <p className=\"heading\">Result</p>\r\n                            {event.Result && <p className=\"title is-5\">{event.result}</p>}\r\n                            {!event.Result && <p className=\"title is-5\">TBC</p>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr className={tableStyles.hBreak} />\r\n\r\n            <p className=\"heading is-marginless\">Start time:\r\n                <span className=\"has-text-weight-semibold\">\r\n                    { \"14:00\" || new Date(event.date).toLocaleTimeString() }\r\n                </span>\r\n             </p>\r\n        </div>\r\n)\r\n\r\nconst DateBox = ({date}) => {\r\n    const newDate = new Date(date);\r\n    let days = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thur\", \"Fri\", \"Sat\", \"Sun\"]\r\n    return (\r\n        <div className={tableStyles.dateBoxWrap}>\r\n            <h5 className=\"subtitle is-7 is-marginless\">{days[newDate.getDay()].toUpperCase()}</h5>\r\n            <h2 className=\"subtitle is-3 is-marginless\">{newDate.getDate()}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst EventDescription = ({name, description}) => (\r\n    <div className={tableStyles.descWrap}>\r\n        <p className=\"heading\">Opponent</p>\r\n        <h1 className={`has-text-weight-semibold`}>{name}</h1>\r\n        {/* <EventTags /> */}\r\n    </div>\r\n)\r\n\r\n// const EventTags = () => (\r\n//     <div className=\"tags are-small\">\r\n//         <span className=\"tag is-primary\">Home</span>\r\n//         <span className=\"tag is-info\">Triples</span>\r\n//         <span className=\"tag is-warning\">Mixed</span>\r\n//         <span className=\"tag is-success\">Medium</span>\r\n//     </div>\r\n// )\r\n\r\n\r\nexport default ({events, year, month}) => {\r\n    console.log(events, 'this is events')\r\n    return (\r\n            <div className=\"columns\" style={{'width': '70%', 'maxWidth': '70%'}}> \r\n                <div className=\"column is-full\">\r\n                    <section className=\"events-main\">\r\n                        <h1 className=\"subtitle is-6\">Fixtures for {year}</h1>\r\n                        <h1 className=\"subtitle is-2\">{month}</h1>\r\n                        <hr />\r\n                        {\r\n                            events.map(({node}) => {\r\n                                return (\r\n                                    <EventItem key={node.id} event={node} />\r\n                                )\r\n                            }) \r\n                        }\r\n                        {!events.length && <p>Currently no events</p>}\r\n                    </section>\r\n                </div>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport menuStyles from './events.menus.module.scss'\r\n\r\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\nconst years = [\"2018\", \"2019\"];\r\n\r\nconst EventsMenu = (props) => {\r\n    return (\r\n      <div className={menuStyles.menuWrapper}>\r\n        <aside className=\"menu\">\r\n            <p className=\"menu-label\">\r\n                Years\r\n            </p>\r\n            <ul className=\"menu-list\">\r\n                {years.map((year) => {          \r\n                    return (\r\n                      <li key={year}>\r\n                        <a \r\n                          className={year === props.year \r\n                          ? \"is-active\" \r\n                          : \"\"}\r\n                          onClick={() => props.setYear(year)}\r\n                          >\r\n                          {year}\r\n                        </a>\r\n                        {year === props.year \r\n\r\n                          && <MonthsList \r\n                                month={props.month}\r\n                                setMonth={props.setMonth}\r\n                        />}\r\n                      </li>\r\n                    )  \r\n                    }\r\n                )}\r\n            </ul>\r\n        </aside>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nconst MonthsList = (props) => {\r\n    return (\r\n        <ul>\r\n            {months.map((month) => {\r\n              return (\r\n                <li key={month}>\r\n                  <a \r\n                    className={month === props.month \r\n                      ? \"is-active\" \r\n                      : \"\"}\r\n                    onClick={() => props.setMonth(month)}>\r\n                    {month}\r\n                  </a>\r\n                </li>\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default EventsMenu;","import React from 'react';\r\nimport Layout from \"../components/layout\"\r\nimport Moment from 'moment';\r\n\r\n\r\nimport Events from '../components/events/events-table.js';\r\nimport EventsMenu from '../components/events/events.menus.js';\r\n\r\nclass EventsWrapper extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            year: '',\r\n            month: '',\r\n            filter: false\r\n        }\r\n\r\n        this.toggleMenu = false;\r\n        this.months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n        this.setYear = this.setYear.bind(this);\r\n        this.setMonth = this.setMonth.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const year = Moment().format('YYYY');\r\n        const month = Moment().format('MMMM');\r\n\r\n\r\n        return this.setState({\r\n            month,\r\n            year\r\n        })\r\n    }\r\n\r\n    menuToggle = () => {\r\n\r\n        this.setState({\r\n            toggleMenu: !this.toggleMenu\r\n        })\r\n    }\r\n\r\n    setYear (year) {\r\n        return this.setState({\r\n            year: year === this.state.year ? \"\" : year,\r\n            filter: !this.filter\r\n        })\r\n    }\r\n\r\n    setMonth (month) {\r\n        return this.setState({\r\n            month: month === this.state.month ? \"\" : month,\r\n            filter: !this.filter\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const events = this.props.data.allStrapiFixture.edges.filter(({node}) => {\r\n            const date = new Date(node.date);\r\n            const year = Moment(date).format('YYYY');\r\n            const month = Moment(date).format('MMMM');\r\n\r\n            return year === this.state.year && month === this.state.month;\r\n        })\r\n\r\n        return (\r\n            <Layout>\r\n                <div className=\"events-wrapper\">\r\n                    <EventsMenu  \r\n                        setMonth={this.setMonth}\r\n                        setYear={this.setYear}\r\n                        year={this.state.year}\r\n                        month={this.state.month}\r\n                    />\r\n                    <Events \r\n                        events={this.state.filter \r\n                            ? events \r\n                            : this.props.data.allStrapiFixture.edges\r\n                        }\r\n                        year={this.state.year}\r\n                        month={this.state.month}\r\n                    />\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventsWrapper;\r\n\r\nexport const eventsQuery = graphql`\r\n  query EventsQuery {\r\n    allStrapiFixture {\r\n      edges {\r\n        node {\r\n          id\r\n          date\r\n          opponent\r\n          match\r\n          dress\r\n          match_type\r\n          venue\r\n          format\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","export const isBrowser = () => typeof window !== \"undefined\"\r\n\r\nexport const getUser = () =>\r\n    isBrowser() && window.sessionStorage.getItem(\"gatsbyUser\")\r\n    ? JSON.parse(window.sessionStorage.getItem(\"gatsbyUser\"))\r\n    : {}\r\n\r\nconst setUser = user =>\r\n    window.sessionStorage.setItem(\"gatsbyUser\", JSON.stringify(user))\r\n\r\nexport const handleLogin = ({ password}) => {\r\n    if (password === `1970`) {\r\n        return setUser({\r\n            username: `member`\r\n        })\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const isLoggedIn = () => {\r\n    const user = getUser()\r\n\r\n    return !!user.username\r\n}\r\n\r\nexport const logout = callback => {\r\n    setUser({})\r\n    callback();\r\n}","import React from 'react';\r\nimport { Link, navigate } from \"gatsby\"\r\n\r\n\r\nimport { getUser, isLoggedIn, logout } from \"../../services/auth\";\r\n\r\nclass Nav extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeNav: ''\r\n        }\r\n    }\r\n\r\n    toggleNav = () => {\r\n        return this.setState({\r\n            activeNav: !this.state.activeNav\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <nav className=\"navbar has-background-white-ter\" role=\"navigation\" aria-label=\"main navigation\">\r\n                <div className=\"navbar-brand\">\r\n                    <Link className=\"navbar-item\" to=\"/\">\r\n                        <p className=\"title\">BH<span className=\"has-text-primary\">BC</span></p>\r\n                    </Link>\r\n\r\n                    <a role=\"button\" \r\n                        className={`navbar-burger ${this.state.activeNav ? 'is-active' : ''}`}\r\n                         data-target=\"navMenu\" \r\n                         aria-label=\"menu\" \r\n                         aria-expanded=\"false\"\r\n                         onClick={() => this.toggleNav()}\r\n                        >\r\n                        <span aria-hidden=\"true\"></span>\r\n                        <span aria-hidden=\"true\"></span>\r\n                        <span aria-hidden=\"true\"></span>\r\n                    </a>\r\n                </div>\r\n\r\n                <div className={`navbar-menu ${this.state.activeNav ? 'is-active' : ''}`}>\r\n                    <div className=\"navbar-end\">\r\n                        <Link className=\"navbar-item\" to=\"/\">\r\n                            Home\r\n                        </Link>\r\n                        <div className=\"navbar-item has-dropdown is-hoverable\">\r\n                            <Link className=\"navbar-item\" to=\"/history\">\r\n                                About\r\n                            </Link>\r\n                            <div className=\"navbar-dropdown\">\r\n                                <Link className=\"navbar-item\" to=\"/commitee\">\r\n                                    Committee\r\n                                </Link>\r\n                                {/* <Link className=\"navbar-item\" to=\"/members\">\r\n                                    Membership\r\n                                </Link> */}\r\n                                <Link className=\"navbar-item\" to=\"/history\">\r\n                                    History\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        <Link className=\"navbar-item\" to=\"/news\">\r\n                            News\r\n                        </Link>\r\n                        <Link className=\"navbar-item\" to=\"/events\">\r\n                            Events\r\n                        </Link>\r\n                        <Link className=\"navbar-item\" to=\"/rules\">\r\n                            Rules\r\n                        </Link>\r\n                        {/* <Link className=\"navbar-item\" to=\"/tournament\">\r\n                            Tournament\r\n                        </Link> */}\r\n                        {/* <Link className=\"navbar-item\" to=\"/contact\">\r\n                            Contact\r\n                        </Link> */}\r\n                        {isLoggedIn() &&  <Link className=\"navbar-item\" to=\"/app/minutes\">\r\n                            Minutes\r\n                        </Link>}\r\n                        {!isLoggedIn() &&  <Link className=\"navbar-item\" to=\"/app/login\">\r\n                            Login\r\n                        </Link>}\r\n                        {isLoggedIn() ? (\r\n                            <Link className=\"navbar-item\" \r\n                                to=\"/app/login\"\r\n                                onClick={event => {\r\n                                    event.preventDefault()\r\n                                    logout(() => navigate(`/`))\r\n                                }}\r\n                            >\r\n                                Logout\r\n                            </Link>\r\n                            ) : null}\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n   \r\n }\r\n\r\n export default Nav;","import React from 'react';\r\n\r\nexport default () => (\r\n    <footer className=\"footer\">\r\n        <div className=\"content has-text-centered\">\r\n            <p>\r\n                Burgess Hill Bowls Club - Created by HeyJPDesigns\r\n            </p> \r\n        </div>\r\n    </footer>\r\n)","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\n// import Header from \"./header\"\r\nimport Nav from './nav/nav.js'\r\nimport Footer from './footer/footer.js'\r\nimport \"./layout.scss\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\r\n        <Nav></Nav>\r\n          <div>\r\n            <main>{children}</main>\r\n            {/* <footer>\r\n              © {new Date().getFullYear()}, Built with\r\n              {` `}\r\n              <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n            </footer> */}\r\n          </div>\r\n        <Footer></Footer>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}